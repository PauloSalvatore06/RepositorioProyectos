CCS PCM C Compiler, Version 5.015, 5967               16-nov.-18 09:20

               Filename:   C:\Users\Paulo\Documents\MEGAsync\Trabajos de la escuela\CETI\7° Semestre\Electrónica Digital IV\Prácticas\Practica 10\Practica 10.lst

               ROM used:   1967 words (24%)
                           Largest free fragment is 2048
               RAM used:   9 (2%) at main() level
                           42 (11%) worst case
               Stack used: 5 locations
               Stack size: 8

*
0000:  MOVLW  06
0001:  MOVWF  0A
0002:  GOTO   660
0003:  NOP
.................... /* Práctica 10: Calculadora de 3 bits 
....................    Paulo Salvatore Partida Escamilla   15300210 
....................    Jose Luis Marín Alarcón             15300157 
.................... */ 
.................... #include <16F886.h> 
.................... //////////// Standard Header file for the PIC16F886 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F886 
0004:  BCF    0A.0
0005:  BCF    0A.1
0006:  BCF    0A.2
0007:  ADDWF  02,F
0008:  RETLW  28
0009:  RETLW  0C
000A:  RETLW  01
000B:  RETLW  06
000C:  DATA 0C,10
000D:  DATA 0A,10
000E:  DATA 0C,00
000F:  DATA 41,10
0010:  DATA 2B,10
0011:  DATA 42,05
0012:  DATA A0,12
0013:  DATA 75,10
0014:  DATA 2B,10
0015:  DATA A5,3A
0016:  DATA A0,1E
0017:  DATA A0,12
0018:  DATA 75,00
0019:  DATA 0C,10
001A:  DATA 0A,10
001B:  DATA 0C,00
001C:  DATA 41,10
001D:  DATA 2D,10
001E:  DATA 42,05
001F:  DATA A0,12
0020:  DATA 75,10
0021:  DATA 2D,10
0022:  DATA A5,3A
0023:  DATA A0,1E
0024:  DATA A0,12
0025:  DATA 64,00
0026:  DATA 0C,10
0027:  DATA 0A,10
0028:  DATA 0C,00
0029:  DATA 41,10
002A:  DATA 2A,10
002B:  DATA 42,05
002C:  DATA A0,12
002D:  DATA 75,10
002E:  DATA 2A,10
002F:  DATA A5,3A
0030:  DATA A0,1E
0031:  DATA A0,12
0032:  DATA 64,00
0033:  DATA 0C,10
0034:  DATA 0A,10
0035:  DATA 0C,00
0036:  DATA 41,10
0037:  DATA 2F,10
0038:  DATA 42,05
0039:  DATA A0,12
003A:  DATA 75,10
003B:  DATA 2F,10
003C:  DATA A5,3A
003D:  DATA A0,1E
003E:  DATA A0,12
003F:  DATA AE,19
0040:  DATA 67,00
*
00FE:  MOVF   0B,W
00FF:  MOVWF  29
0100:  BCF    0B.7
0101:  BSF    03.5
0102:  BSF    03.6
0103:  BSF    0C.7
0104:  BSF    0C.0
0105:  NOP
0106:  NOP
0107:  BCF    03.5
0108:  BCF    03.6
0109:  BTFSC  29.7
010A:  BSF    0B.7
010B:  BSF    03.6
010C:  MOVF   0C,W
010D:  ANDLW  7F
010E:  BTFSC  03.2
010F:  GOTO   152
0110:  BCF    03.6
0111:  MOVWF  29
0112:  BSF    03.6
0113:  MOVF   0D,W
0114:  BCF    03.6
0115:  MOVWF  2A
0116:  BSF    03.6
0117:  MOVF   0F,W
0118:  BCF    03.6
0119:  MOVWF  2B
011A:  MOVF   29,W
011B:  MOVWF  36
011C:  CALL   0DA
011D:  MOVF   2A,W
011E:  BSF    03.6
011F:  MOVWF  0D
0120:  BCF    03.6
0121:  MOVF   2B,W
0122:  BSF    03.6
0123:  MOVWF  0F
0124:  BCF    03.6
0125:  MOVF   0B,W
0126:  MOVWF  2C
0127:  BCF    0B.7
0128:  BSF    03.5
0129:  BSF    03.6
012A:  BSF    0C.7
012B:  BSF    0C.0
012C:  NOP
012D:  NOP
012E:  BCF    03.5
012F:  BCF    03.6
0130:  BTFSC  2C.7
0131:  BSF    0B.7
0132:  BSF    03.6
0133:  RLF    0C,W
0134:  RLF    0E,W
0135:  ANDLW  7F
0136:  BTFSC  03.2
0137:  GOTO   152
0138:  BCF    03.6
0139:  MOVWF  29
013A:  BSF    03.6
013B:  MOVF   0D,W
013C:  BCF    03.6
013D:  MOVWF  2A
013E:  BSF    03.6
013F:  MOVF   0F,W
0140:  BCF    03.6
0141:  MOVWF  2B
0142:  MOVF   29,W
0143:  MOVWF  36
0144:  CALL   0DA
0145:  MOVF   2A,W
0146:  BSF    03.6
0147:  MOVWF  0D
0148:  BCF    03.6
0149:  MOVF   2B,W
014A:  BSF    03.6
014B:  MOVWF  0F
014C:  INCF   0D,F
014D:  BTFSC  03.2
014E:  INCF   0F,F
014F:  BCF    03.6
0150:  GOTO   0FE
0151:  BSF    03.6
0152:  BCF    03.6
0153:  RETURN
0154:  MOVF   0B,W
0155:  MOVWF  2A
0156:  BCF    0B.7
0157:  BSF    03.5
0158:  BSF    03.6
0159:  BSF    0C.7
015A:  BSF    0C.0
015B:  NOP
015C:  NOP
015D:  BCF    03.5
015E:  BCF    03.6
015F:  BTFSC  2A.7
0160:  BSF    0B.7
0161:  BTFSC  03.0
0162:  GOTO   18B
0163:  BSF    03.6
0164:  MOVF   0C,W
0165:  ANDLW  7F
0166:  BCF    03.6
0167:  MOVWF  2A
0168:  BSF    03.6
0169:  MOVF   0D,W
016A:  BCF    03.6
016B:  MOVWF  2B
016C:  BSF    03.6
016D:  MOVF   0F,W
016E:  BCF    03.6
016F:  MOVWF  2C
0170:  MOVF   2A,W
0171:  MOVWF  36
0172:  CALL   0DA
0173:  MOVF   2B,W
0174:  BSF    03.6
0175:  MOVWF  0D
0176:  BCF    03.6
0177:  MOVF   2C,W
0178:  BSF    03.6
0179:  MOVWF  0F
017A:  BCF    03.6
017B:  MOVF   0B,W
017C:  MOVWF  2D
017D:  BCF    0B.7
017E:  BSF    03.5
017F:  BSF    03.6
0180:  BSF    0C.7
0181:  BSF    0C.0
0182:  NOP
0183:  NOP
0184:  BCF    03.5
0185:  BCF    03.6
0186:  BTFSC  2D.7
0187:  BSF    0B.7
0188:  DECFSZ 29,F
0189:  GOTO   18B
018A:  GOTO   1AA
018B:  BSF    03.6
018C:  RLF    0C,W
018D:  RLF    0E,W
018E:  ANDLW  7F
018F:  BCF    03.6
0190:  MOVWF  2A
0191:  BSF    03.6
0192:  MOVF   0D,W
0193:  BCF    03.6
0194:  MOVWF  2B
0195:  BSF    03.6
0196:  MOVF   0F,W
0197:  BCF    03.6
0198:  MOVWF  2C
0199:  MOVF   2A,W
019A:  MOVWF  36
019B:  CALL   0DA
019C:  MOVF   2B,W
019D:  BSF    03.6
019E:  MOVWF  0D
019F:  BCF    03.6
01A0:  MOVF   2C,W
01A1:  BSF    03.6
01A2:  MOVWF  0F
01A3:  INCF   0D,F
01A4:  BTFSC  03.2
01A5:  INCF   0F,F
01A6:  BCF    03.0
01A7:  BCF    03.6
01A8:  DECFSZ 29,F
01A9:  GOTO   154
01AA:  RETURN
01AB:  MOVF   30,W
01AC:  CLRF   78
01AD:  SUBWF  2F,W
01AE:  BTFSC  03.0
01AF:  GOTO   1B3
01B0:  MOVF   2F,W
01B1:  MOVWF  77
01B2:  GOTO   1BF
01B3:  CLRF   77
01B4:  MOVLW  08
01B5:  MOVWF  31
01B6:  RLF    2F,F
01B7:  RLF    77,F
01B8:  MOVF   30,W
01B9:  SUBWF  77,W
01BA:  BTFSC  03.0
01BB:  MOVWF  77
01BC:  RLF    78,F
01BD:  DECFSZ 31,F
01BE:  GOTO   1B6
01BF:  RETURN
01C0:  MOVF   78,W
01C1:  MOVF   29,W
01C2:  MOVWF  2F
01C3:  MOVLW  64
01C4:  MOVWF  30
01C5:  CALL   1AB
01C6:  MOVF   77,W
01C7:  MOVWF  29
01C8:  MOVF   78,W
01C9:  MOVLW  30
01CA:  BTFSS  03.2
01CB:  GOTO   1D3
01CC:  BTFSS  2A.1
01CD:  GOTO   1DA
01CE:  BTFSC  2A.3
01CF:  GOTO   1DA
01D0:  BTFSC  2A.4
01D1:  MOVLW  20
01D2:  GOTO   1D6
01D3:  BCF    2A.3
01D4:  BCF    2A.4
01D5:  BSF    2A.0
01D6:  ADDWF  78,F
01D7:  MOVF   78,W
01D8:  MOVWF  36
01D9:  CALL   0DA
01DA:  MOVF   29,W
01DB:  MOVWF  2F
01DC:  MOVLW  0A
01DD:  MOVWF  30
01DE:  CALL   1AB
01DF:  MOVF   77,W
01E0:  MOVWF  29
01E1:  MOVF   78,W
01E2:  MOVLW  30
01E3:  BTFSS  03.2
01E4:  GOTO   1EB
01E5:  BTFSC  2A.3
01E6:  GOTO   1EF
01E7:  BTFSS  2A.0
01E8:  GOTO   1EF
01E9:  BTFSC  2A.4
01EA:  MOVLW  20
01EB:  ADDWF  78,F
01EC:  MOVF   78,W
01ED:  MOVWF  36
01EE:  CALL   0DA
01EF:  MOVLW  30
01F0:  ADDWF  29,F
01F1:  MOVF   29,W
01F2:  MOVWF  36
01F3:  CALL   0DA
01F4:  RETURN
01F5:  MOVLW  20
01F6:  BTFSS  2A.4
01F7:  MOVLW  30
01F8:  MOVWF  2B
01F9:  MOVF   29,W
01FA:  MOVWF  77
01FB:  BTFSS  29.7
01FC:  GOTO   205
01FD:  COMF   77,F
01FE:  INCF   77,F
01FF:  MOVF   77,W
0200:  MOVWF  29
0201:  MOVLW  2D
0202:  MOVWF  2B
0203:  BSF    2A.7
0204:  BSF    2A.0
0205:  MOVF   29,W
0206:  MOVWF  2F
0207:  MOVLW  64
0208:  MOVWF  30
0209:  CALL   1AB
020A:  MOVF   77,W
020B:  MOVWF  29
020C:  MOVLW  30
020D:  ADDWF  78,W
020E:  MOVWF  2C
020F:  MOVF   29,W
0210:  MOVWF  2F
0211:  MOVLW  0A
0212:  MOVWF  30
0213:  CALL   1AB
0214:  MOVLW  30
0215:  ADDWF  77,W
0216:  MOVWF  2E
0217:  MOVLW  30
0218:  ADDWF  78,W
0219:  MOVWF  2D
021A:  MOVF   2B,W
021B:  MOVWF  77
021C:  MOVLW  30
021D:  SUBWF  2C,W
021E:  BTFSC  03.2
021F:  GOTO   224
0220:  BSF    2A.1
0221:  BTFSC  2A.7
0222:  BSF    2A.2
0223:  GOTO   238
0224:  MOVF   2B,W
0225:  MOVWF  2C
0226:  MOVLW  20
0227:  MOVWF  2B
0228:  MOVLW  30
0229:  SUBWF  2D,W
022A:  BTFSC  03.2
022B:  GOTO   230
022C:  BSF    2A.0
022D:  BTFSC  2A.7
022E:  BSF    2A.1
022F:  GOTO   238
0230:  BTFSS  03.2
0231:  BSF    2A.0
0232:  BTFSS  03.2
0233:  GOTO   238
0234:  MOVF   2C,W
0235:  MOVWF  2D
0236:  MOVLW  20
0237:  MOVWF  2C
0238:  BTFSC  2A.2
0239:  GOTO   23F
023A:  BTFSC  2A.1
023B:  GOTO   242
023C:  BTFSC  2A.0
023D:  GOTO   245
023E:  GOTO   248
023F:  MOVF   2B,W
0240:  MOVWF  36
0241:  CALL   0DA
0242:  MOVF   2C,W
0243:  MOVWF  36
0244:  CALL   0DA
0245:  MOVF   2D,W
0246:  MOVWF  36
0247:  CALL   0DA
0248:  MOVF   2E,W
0249:  MOVWF  36
024A:  CALL   0DA
024B:  RETURN
024C:  CLRF   77
024D:  CLRF   78
024E:  MOVF   29,W
024F:  BCF    03.0
0250:  BTFSC  2A.0
0251:  ADDWF  77,F
0252:  RRF    77,F
0253:  RRF    78,F
0254:  BTFSC  2A.1
0255:  ADDWF  77,F
0256:  RRF    77,F
0257:  RRF    78,F
0258:  BTFSC  2A.2
0259:  ADDWF  77,F
025A:  RRF    77,F
025B:  RRF    78,F
025C:  BTFSC  2A.3
025D:  ADDWF  77,F
025E:  RRF    77,F
025F:  RRF    78,F
0260:  BTFSC  2A.4
0261:  ADDWF  77,F
0262:  RRF    77,F
0263:  RRF    78,F
0264:  BTFSC  2A.5
0265:  ADDWF  77,F
0266:  RRF    77,F
0267:  RRF    78,F
0268:  BTFSC  2A.6
0269:  ADDWF  77,F
026A:  RRF    77,F
026B:  RRF    78,F
026C:  BTFSC  2A.7
026D:  ADDWF  77,F
026E:  RRF    77,F
026F:  RRF    78,F
0270:  BCF    0A.3
0271:  BCF    0A.4
0272:  GOTO   70B (RETURN)
0273:  MOVLW  8E
0274:  MOVWF  77
0275:  MOVF   2E,W
0276:  MOVWF  78
0277:  MOVF   2D,W
0278:  MOVWF  79
0279:  CLRF   7A
027A:  MOVF   78,F
027B:  BTFSS  03.2
027C:  GOTO   287
027D:  MOVF   79,W
027E:  MOVWF  78
027F:  CLRF   79
0280:  MOVLW  08
0281:  SUBWF  77,F
0282:  MOVF   78,F
0283:  BTFSS  03.2
0284:  GOTO   287
0285:  CLRF   77
0286:  GOTO   28F
0287:  BCF    03.0
0288:  BTFSC  78.7
0289:  GOTO   28E
028A:  RLF    79,F
028B:  RLF    78,F
028C:  DECF   77,F
028D:  GOTO   287
028E:  BCF    78.7
028F:  RETURN
0290:  MOVF   2D,W
0291:  BTFSC  03.2
0292:  GOTO   355
0293:  MOVWF  39
0294:  MOVF   31,W
0295:  BTFSC  03.2
0296:  GOTO   355
0297:  SUBWF  39,F
0298:  BTFSS  03.0
0299:  GOTO   29F
029A:  MOVLW  7F
029B:  ADDWF  39,F
029C:  BTFSC  03.0
029D:  GOTO   355
029E:  GOTO   2A5
029F:  MOVLW  81
02A0:  SUBWF  39,F
02A1:  BTFSS  03.0
02A2:  GOTO   355
02A3:  BTFSC  03.2
02A4:  GOTO   355
02A5:  MOVF   39,W
02A6:  MOVWF  77
02A7:  CLRF   78
02A8:  CLRF   79
02A9:  CLRF   7A
02AA:  CLRF   38
02AB:  MOVF   2E,W
02AC:  MOVWF  37
02AD:  BSF    37.7
02AE:  MOVF   2F,W
02AF:  MOVWF  36
02B0:  MOVF   30,W
02B1:  MOVWF  35
02B2:  MOVLW  19
02B3:  MOVWF  39
02B4:  MOVF   34,W
02B5:  SUBWF  35,F
02B6:  BTFSC  03.0
02B7:  GOTO   2C8
02B8:  MOVLW  01
02B9:  SUBWF  36,F
02BA:  BTFSC  03.0
02BB:  GOTO   2C8
02BC:  SUBWF  37,F
02BD:  BTFSC  03.0
02BE:  GOTO   2C8
02BF:  SUBWF  38,F
02C0:  BTFSC  03.0
02C1:  GOTO   2C8
02C2:  INCF   38,F
02C3:  INCF   37,F
02C4:  INCF   36,F
02C5:  MOVF   34,W
02C6:  ADDWF  35,F
02C7:  GOTO   2FA
02C8:  MOVF   33,W
02C9:  SUBWF  36,F
02CA:  BTFSC  03.0
02CB:  GOTO   2E3
02CC:  MOVLW  01
02CD:  SUBWF  37,F
02CE:  BTFSC  03.0
02CF:  GOTO   2E3
02D0:  SUBWF  38,F
02D1:  BTFSC  03.0
02D2:  GOTO   2E3
02D3:  INCF   38,F
02D4:  INCF   37,F
02D5:  MOVF   33,W
02D6:  ADDWF  36,F
02D7:  MOVF   34,W
02D8:  ADDWF  35,F
02D9:  BTFSS  03.0
02DA:  GOTO   2FA
02DB:  INCF   36,F
02DC:  BTFSS  03.2
02DD:  GOTO   2FA
02DE:  INCF   37,F
02DF:  BTFSS  03.2
02E0:  GOTO   2FA
02E1:  INCF   38,F
02E2:  GOTO   2FA
02E3:  MOVF   32,W
02E4:  IORLW  80
02E5:  SUBWF  37,F
02E6:  BTFSC  03.0
02E7:  GOTO   2F9
02E8:  MOVLW  01
02E9:  SUBWF  38,F
02EA:  BTFSC  03.0
02EB:  GOTO   2F9
02EC:  INCF   38,F
02ED:  MOVF   32,W
02EE:  IORLW  80
02EF:  ADDWF  37,F
02F0:  MOVF   33,W
02F1:  ADDWF  36,F
02F2:  BTFSS  03.0
02F3:  GOTO   2D7
02F4:  INCF   37,F
02F5:  BTFSS  03.2
02F6:  GOTO   2D7
02F7:  INCF   38,F
02F8:  GOTO   2D7
02F9:  BSF    7A.0
02FA:  DECFSZ 39,F
02FB:  GOTO   2FD
02FC:  GOTO   308
02FD:  BCF    03.0
02FE:  RLF    35,F
02FF:  RLF    36,F
0300:  RLF    37,F
0301:  RLF    38,F
0302:  BCF    03.0
0303:  RLF    7A,F
0304:  RLF    79,F
0305:  RLF    78,F
0306:  RLF    3A,F
0307:  GOTO   2B4
0308:  BTFSS  3A.0
0309:  GOTO   310
030A:  BCF    03.0
030B:  RRF    78,F
030C:  RRF    79,F
030D:  RRF    7A,F
030E:  RRF    3A,F
030F:  GOTO   313
0310:  DECF   77,F
0311:  BTFSC  03.2
0312:  GOTO   355
0313:  BTFSC  3A.7
0314:  GOTO   33C
0315:  BCF    03.0
0316:  RLF    35,F
0317:  RLF    36,F
0318:  RLF    37,F
0319:  RLF    38,F
031A:  MOVF   34,W
031B:  SUBWF  35,F
031C:  BTFSC  03.0
031D:  GOTO   328
031E:  MOVLW  01
031F:  SUBWF  36,F
0320:  BTFSC  03.0
0321:  GOTO   328
0322:  SUBWF  37,F
0323:  BTFSC  03.0
0324:  GOTO   328
0325:  SUBWF  38,F
0326:  BTFSS  03.0
0327:  GOTO   34B
0328:  MOVF   33,W
0329:  SUBWF  36,F
032A:  BTFSC  03.0
032B:  GOTO   333
032C:  MOVLW  01
032D:  SUBWF  37,F
032E:  BTFSC  03.0
032F:  GOTO   333
0330:  SUBWF  38,F
0331:  BTFSS  03.0
0332:  GOTO   34B
0333:  MOVF   32,W
0334:  IORLW  80
0335:  SUBWF  37,F
0336:  BTFSC  03.0
0337:  GOTO   33C
0338:  MOVLW  01
0339:  SUBWF  38,F
033A:  BTFSS  03.0
033B:  GOTO   34B
033C:  INCF   7A,F
033D:  BTFSS  03.2
033E:  GOTO   34B
033F:  INCF   79,F
0340:  BTFSS  03.2
0341:  GOTO   34B
0342:  INCF   78,F
0343:  BTFSS  03.2
0344:  GOTO   34B
0345:  INCF   77,F
0346:  BTFSC  03.2
0347:  GOTO   355
0348:  RRF    78,F
0349:  RRF    79,F
034A:  RRF    7A,F
034B:  MOVF   2E,W
034C:  MOVWF  39
034D:  MOVF   32,W
034E:  XORWF  39,F
034F:  BTFSS  39.7
0350:  GOTO   353
0351:  BSF    78.7
0352:  GOTO   359
0353:  BCF    78.7
0354:  GOTO   359
0355:  CLRF   77
0356:  CLRF   78
0357:  CLRF   79
0358:  CLRF   7A
0359:  BCF    0A.3
035A:  BCF    0A.4
035B:  GOTO   764 (RETURN)
035C:  BTFSC  03.1
035D:  GOTO   361
035E:  MOVLW  3E
035F:  MOVWF  04
0360:  BCF    03.7
0361:  CLRF   77
0362:  CLRF   78
0363:  CLRF   79
0364:  CLRF   7A
0365:  CLRF   3E
0366:  CLRF   3F
0367:  CLRF   40
0368:  CLRF   41
0369:  MOVF   3D,W
036A:  IORWF  3C,W
036B:  IORWF  3B,W
036C:  IORWF  3A,W
036D:  BTFSC  03.2
036E:  GOTO   39F
036F:  MOVLW  20
0370:  MOVWF  42
0371:  BCF    03.0
0372:  RLF    36,F
0373:  RLF    37,F
0374:  RLF    38,F
0375:  RLF    39,F
0376:  RLF    3E,F
0377:  RLF    3F,F
0378:  RLF    40,F
0379:  RLF    41,F
037A:  MOVF   3D,W
037B:  SUBWF  41,W
037C:  BTFSS  03.2
037D:  GOTO   388
037E:  MOVF   3C,W
037F:  SUBWF  40,W
0380:  BTFSS  03.2
0381:  GOTO   388
0382:  MOVF   3B,W
0383:  SUBWF  3F,W
0384:  BTFSS  03.2
0385:  GOTO   388
0386:  MOVF   3A,W
0387:  SUBWF  3E,W
0388:  BTFSS  03.0
0389:  GOTO   399
038A:  MOVF   3A,W
038B:  SUBWF  3E,F
038C:  MOVF   3B,W
038D:  BTFSS  03.0
038E:  INCFSZ 3B,W
038F:  SUBWF  3F,F
0390:  MOVF   3C,W
0391:  BTFSS  03.0
0392:  INCFSZ 3C,W
0393:  SUBWF  40,F
0394:  MOVF   3D,W
0395:  BTFSS  03.0
0396:  INCFSZ 3D,W
0397:  SUBWF  41,F
0398:  BSF    03.0
0399:  RLF    77,F
039A:  RLF    78,F
039B:  RLF    79,F
039C:  RLF    7A,F
039D:  DECFSZ 42,F
039E:  GOTO   371
039F:  MOVF   3E,W
03A0:  MOVWF  00
03A1:  INCF   04,F
03A2:  MOVF   3F,W
03A3:  MOVWF  00
03A4:  INCF   04,F
03A5:  MOVF   40,W
03A6:  MOVWF  00
03A7:  INCF   04,F
03A8:  MOVF   41,W
03A9:  MOVWF  00
03AA:  RETURN
03AB:  MOVF   04,W
03AC:  MOVWF  2E
03AD:  MOVF   2D,W
03AE:  MOVWF  30
03AF:  BTFSC  03.2
03B0:  GOTO   43D
03B1:  MOVF   2C,W
03B2:  MOVWF  39
03B3:  MOVF   2B,W
03B4:  MOVWF  38
03B5:  MOVF   2A,W
03B6:  MOVWF  37
03B7:  MOVF   29,W
03B8:  MOVWF  36
03B9:  CLRF   3D
03BA:  CLRF   3C
03BB:  MOVLW  20
03BC:  MOVWF  3B
03BD:  MOVLW  82
03BE:  MOVWF  3A
03BF:  MOVF   36,W
03C0:  BTFSC  03.2
03C1:  GOTO   42F
03C2:  MOVWF  3E
03C3:  MOVF   3A,W
03C4:  BTFSC  03.2
03C5:  GOTO   42F
03C6:  ADDWF  3E,F
03C7:  BTFSC  03.0
03C8:  GOTO   3D0
03C9:  MOVLW  7F
03CA:  SUBWF  3E,F
03CB:  BTFSS  03.0
03CC:  GOTO   42F
03CD:  BTFSC  03.2
03CE:  GOTO   42F
03CF:  GOTO   3D4
03D0:  MOVLW  81
03D1:  ADDWF  3E,F
03D2:  BTFSC  03.0
03D3:  GOTO   42F
03D4:  MOVF   3E,W
03D5:  MOVWF  77
03D6:  CLRF   78
03D7:  CLRF   79
03D8:  CLRF   7A
03D9:  MOVF   37,W
03DA:  MOVWF  42
03DB:  BSF    42.7
03DC:  MOVF   38,W
03DD:  MOVWF  41
03DE:  MOVF   39,W
03DF:  MOVWF  40
03E0:  MOVLW  18
03E1:  MOVWF  3E
03E2:  CLRF   3F
03E3:  BTFSS  40.0
03E4:  GOTO   3FD
03E5:  MOVF   3D,W
03E6:  ADDWF  7A,F
03E7:  BTFSS  03.0
03E8:  GOTO   3EF
03E9:  INCF   79,F
03EA:  BTFSS  03.2
03EB:  GOTO   3EF
03EC:  INCF   78,F
03ED:  BTFSC  03.2
03EE:  BSF    3F.7
03EF:  MOVF   3C,W
03F0:  ADDWF  79,F
03F1:  BTFSS  03.0
03F2:  GOTO   3F6
03F3:  INCF   78,F
03F4:  BTFSC  03.2
03F5:  BSF    3F.7
03F6:  MOVF   3B,W
03F7:  MOVWF  38
03F8:  BSF    38.7
03F9:  MOVF   38,W
03FA:  ADDWF  78,F
03FB:  BTFSC  03.0
03FC:  BSF    3F.7
03FD:  RLF    3F,F
03FE:  RRF    78,F
03FF:  RRF    79,F
0400:  RRF    7A,F
0401:  RRF    42,F
0402:  RRF    41,F
0403:  RRF    40,F
0404:  BCF    03.0
0405:  DECFSZ 3E,F
0406:  GOTO   3E2
0407:  MOVLW  01
0408:  ADDWF  77,F
0409:  BTFSC  03.0
040A:  GOTO   42F
040B:  BTFSC  78.7
040C:  GOTO   414
040D:  RLF    42,F
040E:  RLF    7A,F
040F:  RLF    79,F
0410:  RLF    78,F
0411:  DECF   77,F
0412:  BTFSC  03.2
0413:  GOTO   42F
0414:  BTFSS  42.7
0415:  GOTO   425
0416:  INCF   7A,F
0417:  BTFSS  03.2
0418:  GOTO   425
0419:  INCF   79,F
041A:  BTFSS  03.2
041B:  GOTO   425
041C:  INCF   78,F
041D:  BTFSS  03.2
041E:  GOTO   425
041F:  RRF    78,F
0420:  RRF    79,F
0421:  RRF    7A,F
0422:  INCF   77,F
0423:  BTFSC  03.2
0424:  GOTO   42F
0425:  MOVF   37,W
0426:  MOVWF  3F
0427:  MOVF   3B,W
0428:  XORWF  3F,F
0429:  BTFSS  3F.7
042A:  GOTO   42D
042B:  BSF    78.7
042C:  GOTO   433
042D:  BCF    78.7
042E:  GOTO   433
042F:  CLRF   77
0430:  CLRF   78
0431:  CLRF   79
0432:  CLRF   7A
0433:  MOVF   7A,W
0434:  MOVWF  2C
0435:  MOVF   79,W
0436:  MOVWF  2B
0437:  MOVF   78,W
0438:  MOVWF  2A
0439:  MOVF   77,W
043A:  MOVWF  29
043B:  DECFSZ 30,F
043C:  GOTO   3B1
043D:  MOVLW  7E
043E:  MOVWF  77
043F:  CLRF   78
0440:  BTFSC  2A.7
0441:  BSF    78.7
0442:  CLRF   79
0443:  CLRF   7A
0444:  BCF    03.1
0445:  MOVF   2C,W
0446:  MOVWF  39
0447:  MOVF   2B,W
0448:  MOVWF  38
0449:  MOVF   2A,W
044A:  MOVWF  37
044B:  MOVF   29,W
044C:  MOVWF  36
044D:  MOVF   7A,W
044E:  MOVWF  3D
044F:  MOVF   79,W
0450:  MOVWF  3C
0451:  MOVF   78,W
0452:  MOVWF  3B
0453:  MOVF   77,W
0454:  MOVWF  3A
0455:  MOVLW  80
0456:  BTFSC  03.1
0457:  XORWF  3B,F
0458:  CLRF   40
0459:  CLRF   41
045A:  MOVF   37,W
045B:  MOVWF  3F
045C:  MOVF   3B,W
045D:  XORWF  3F,F
045E:  MOVF   36,W
045F:  BTFSC  03.2
0460:  GOTO   545
0461:  MOVWF  3E
0462:  MOVWF  77
0463:  MOVF   3A,W
0464:  BTFSC  03.2
0465:  GOTO   54E
0466:  SUBWF  3E,F
0467:  BTFSC  03.2
0468:  GOTO   4EA
0469:  BTFSS  03.0
046A:  GOTO   4A8
046B:  MOVF   3B,W
046C:  MOVWF  44
046D:  BSF    44.7
046E:  MOVF   3C,W
046F:  MOVWF  43
0470:  MOVF   3D,W
0471:  MOVWF  42
0472:  CLRF   41
0473:  BCF    03.0
0474:  RRF    44,F
0475:  RRF    43,F
0476:  RRF    42,F
0477:  RRF    41,F
0478:  DECFSZ 3E,F
0479:  GOTO   472
047A:  BTFSS  3F.7
047B:  GOTO   47F
047C:  BSF    40.0
047D:  GOTO   562
047E:  BCF    40.0
047F:  BCF    3E.0
0480:  BSF    40.4
0481:  MOVLW  39
0482:  MOVWF  04
0483:  BCF    03.7
0484:  GOTO   577
0485:  BCF    40.4
0486:  BTFSC  3F.7
0487:  GOTO   492
0488:  BTFSS  3E.0
0489:  GOTO   49D
048A:  RRF    44,F
048B:  RRF    43,F
048C:  RRF    42,F
048D:  RRF    41,F
048E:  INCF   77,F
048F:  BTFSC  03.2
0490:  GOTO   55D
0491:  GOTO   49D
0492:  BTFSC  44.7
0493:  GOTO   4A0
0494:  BCF    03.0
0495:  RLF    41,F
0496:  RLF    42,F
0497:  RLF    43,F
0498:  RLF    44,F
0499:  DECF   77,F
049A:  BTFSC  03.2
049B:  GOTO   55D
049C:  GOTO   492
049D:  BSF    40.6
049E:  GOTO   50A
049F:  BCF    40.6
04A0:  MOVF   37,W
04A1:  MOVWF  3F
04A2:  BTFSS  3F.7
04A3:  GOTO   4A6
04A4:  BSF    44.7
04A5:  GOTO   556
04A6:  BCF    44.7
04A7:  GOTO   556
04A8:  MOVF   3A,W
04A9:  MOVWF  3E
04AA:  MOVWF  77
04AB:  MOVF   36,W
04AC:  SUBWF  3E,F
04AD:  MOVF   37,W
04AE:  MOVWF  44
04AF:  BSF    44.7
04B0:  MOVF   38,W
04B1:  MOVWF  43
04B2:  MOVF   39,W
04B3:  MOVWF  42
04B4:  CLRF   41
04B5:  BCF    03.0
04B6:  RRF    44,F
04B7:  RRF    43,F
04B8:  RRF    42,F
04B9:  RRF    41,F
04BA:  DECFSZ 3E,F
04BB:  GOTO   4B4
04BC:  BTFSS  3F.7
04BD:  GOTO   4C1
04BE:  BSF    40.1
04BF:  GOTO   562
04C0:  BCF    40.1
04C1:  BCF    3E.0
04C2:  BSF    40.5
04C3:  MOVLW  3D
04C4:  MOVWF  04
04C5:  BCF    03.7
04C6:  GOTO   577
04C7:  BCF    40.5
04C8:  BTFSC  3F.7
04C9:  GOTO   4D4
04CA:  BTFSS  3E.0
04CB:  GOTO   4DF
04CC:  RRF    44,F
04CD:  RRF    43,F
04CE:  RRF    42,F
04CF:  RRF    41,F
04D0:  INCF   77,F
04D1:  BTFSC  03.2
04D2:  GOTO   55D
04D3:  GOTO   4DF
04D4:  BTFSC  44.7
04D5:  GOTO   4E2
04D6:  BCF    03.0
04D7:  RLF    41,F
04D8:  RLF    42,F
04D9:  RLF    43,F
04DA:  RLF    44,F
04DB:  DECF   77,F
04DC:  BTFSC  03.2
04DD:  GOTO   55D
04DE:  GOTO   4D4
04DF:  BSF    40.7
04E0:  GOTO   50A
04E1:  BCF    40.7
04E2:  MOVF   3B,W
04E3:  MOVWF  3F
04E4:  BTFSS  3F.7
04E5:  GOTO   4E8
04E6:  BSF    44.7
04E7:  GOTO   556
04E8:  BCF    44.7
04E9:  GOTO   556
04EA:  MOVF   3B,W
04EB:  MOVWF  44
04EC:  BSF    44.7
04ED:  MOVF   3C,W
04EE:  MOVWF  43
04EF:  MOVF   3D,W
04F0:  MOVWF  42
04F1:  BTFSS  3F.7
04F2:  GOTO   4F7
04F3:  BCF    44.7
04F4:  BSF    40.2
04F5:  GOTO   562
04F6:  BCF    40.2
04F7:  CLRF   41
04F8:  BCF    3E.0
04F9:  MOVLW  39
04FA:  MOVWF  04
04FB:  BCF    03.7
04FC:  GOTO   577
04FD:  BTFSC  3F.7
04FE:  GOTO   520
04FF:  MOVF   37,W
0500:  MOVWF  3F
0501:  BTFSS  3E.0
0502:  GOTO   50A
0503:  RRF    44,F
0504:  RRF    43,F
0505:  RRF    42,F
0506:  RRF    41,F
0507:  INCF   77,F
0508:  BTFSC  03.2
0509:  GOTO   55D
050A:  BTFSS  41.7
050B:  GOTO   51B
050C:  INCF   42,F
050D:  BTFSS  03.2
050E:  GOTO   51B
050F:  INCF   43,F
0510:  BTFSS  03.2
0511:  GOTO   51B
0512:  INCF   44,F
0513:  BTFSS  03.2
0514:  GOTO   51B
0515:  RRF    44,F
0516:  RRF    43,F
0517:  RRF    42,F
0518:  INCF   77,F
0519:  BTFSC  03.2
051A:  GOTO   55D
051B:  BTFSC  40.6
051C:  GOTO   49F
051D:  BTFSC  40.7
051E:  GOTO   4E1
051F:  GOTO   53F
0520:  MOVLW  80
0521:  XORWF  44,F
0522:  BTFSS  44.7
0523:  GOTO   528
0524:  GOTO   562
0525:  MOVF   3B,W
0526:  MOVWF  3F
0527:  GOTO   535
0528:  MOVF   37,W
0529:  MOVWF  3F
052A:  MOVF   44,F
052B:  BTFSS  03.2
052C:  GOTO   535
052D:  MOVF   43,F
052E:  BTFSS  03.2
052F:  GOTO   535
0530:  MOVF   42,F
0531:  BTFSS  03.2
0532:  GOTO   535
0533:  CLRF   77
0534:  GOTO   556
0535:  BTFSC  44.7
0536:  GOTO   53F
0537:  BCF    03.0
0538:  RLF    41,F
0539:  RLF    42,F
053A:  RLF    43,F
053B:  RLF    44,F
053C:  DECFSZ 77,F
053D:  GOTO   535
053E:  GOTO   55D
053F:  BTFSS  3F.7
0540:  GOTO   543
0541:  BSF    44.7
0542:  GOTO   556
0543:  BCF    44.7
0544:  GOTO   556
0545:  MOVF   3A,W
0546:  MOVWF  77
0547:  MOVF   3B,W
0548:  MOVWF  44
0549:  MOVF   3C,W
054A:  MOVWF  43
054B:  MOVF   3D,W
054C:  MOVWF  42
054D:  GOTO   556
054E:  MOVF   36,W
054F:  MOVWF  77
0550:  MOVF   37,W
0551:  MOVWF  44
0552:  MOVF   38,W
0553:  MOVWF  43
0554:  MOVF   39,W
0555:  MOVWF  42
0556:  MOVF   44,W
0557:  MOVWF  78
0558:  MOVF   43,W
0559:  MOVWF  79
055A:  MOVF   42,W
055B:  MOVWF  7A
055C:  GOTO   595
055D:  CLRF   77
055E:  CLRF   78
055F:  CLRF   79
0560:  CLRF   7A
0561:  GOTO   595
0562:  CLRF   41
0563:  COMF   42,F
0564:  COMF   43,F
0565:  COMF   44,F
0566:  COMF   41,F
0567:  INCF   41,F
0568:  BTFSS  03.2
0569:  GOTO   570
056A:  INCF   42,F
056B:  BTFSS  03.2
056C:  GOTO   570
056D:  INCF   43,F
056E:  BTFSC  03.2
056F:  INCF   44,F
0570:  BTFSC  40.0
0571:  GOTO   47E
0572:  BTFSC  40.1
0573:  GOTO   4C0
0574:  BTFSC  40.2
0575:  GOTO   4F6
0576:  GOTO   525
0577:  MOVF   00,W
0578:  ADDWF  42,F
0579:  BTFSS  03.0
057A:  GOTO   581
057B:  INCF   43,F
057C:  BTFSS  03.2
057D:  GOTO   581
057E:  INCF   44,F
057F:  BTFSC  03.2
0580:  BSF    3E.0
0581:  DECF   04,F
0582:  MOVF   00,W
0583:  ADDWF  43,F
0584:  BTFSS  03.0
0585:  GOTO   589
0586:  INCF   44,F
0587:  BTFSC  03.2
0588:  BSF    3E.0
0589:  DECF   04,F
058A:  MOVF   00,W
058B:  BTFSS  00.7
058C:  XORLW  80
058D:  ADDWF  44,F
058E:  BTFSC  03.0
058F:  BSF    3E.0
0590:  BTFSC  40.4
0591:  GOTO   485
0592:  BTFSC  40.5
0593:  GOTO   4C7
0594:  GOTO   4FD
0595:  MOVF   7A,W
0596:  MOVWF  2C
0597:  MOVF   79,W
0598:  MOVWF  2B
0599:  MOVF   78,W
059A:  MOVWF  2A
059B:  MOVF   77,W
059C:  MOVWF  29
059D:  MOVF   2C,W
059E:  MOVWF  39
059F:  MOVF   2B,W
05A0:  MOVWF  38
05A1:  MOVF   2A,W
05A2:  MOVWF  37
05A3:  MOVF   29,W
05A4:  MOVWF  36
05A5:  MOVF   36,W
05A6:  SUBLW  B6
05A7:  MOVWF  36
05A8:  CLRF   7A
05A9:  MOVF   37,W
05AA:  MOVWF  3A
05AB:  BSF    37.7
05AC:  BCF    03.0
05AD:  RRF    37,F
05AE:  RRF    38,F
05AF:  RRF    39,F
05B0:  RRF    7A,F
05B1:  RRF    79,F
05B2:  RRF    78,F
05B3:  RRF    77,F
05B4:  DECFSZ 36,F
05B5:  GOTO   5AC
05B6:  BTFSS  3A.7
05B7:  GOTO   5C3
05B8:  COMF   77,F
05B9:  COMF   78,F
05BA:  COMF   79,F
05BB:  COMF   7A,F
05BC:  INCF   77,F
05BD:  BTFSC  03.2
05BE:  INCF   78,F
05BF:  BTFSC  03.2
05C0:  INCF   79,F
05C1:  BTFSC  03.2
05C2:  INCF   7A,F
05C3:  MOVF   7A,W
05C4:  MOVWF  2C
05C5:  MOVF   79,W
05C6:  MOVWF  2B
05C7:  MOVF   78,W
05C8:  MOVWF  2A
05C9:  MOVF   77,W
05CA:  MOVWF  29
05CB:  BTFSS  2C.7
05CC:  GOTO   5DA
05CD:  DECF   2E,F
05CE:  BSF    2E.5
05CF:  COMF   29,F
05D0:  COMF   2A,F
05D1:  COMF   2B,F
05D2:  COMF   2C,F
05D3:  INCF   29,F
05D4:  BTFSC  03.2
05D5:  INCF   2A,F
05D6:  BTFSC  03.2
05D7:  INCF   2B,F
05D8:  BTFSC  03.2
05D9:  INCF   2C,F
05DA:  MOVLW  3B
05DB:  MOVWF  35
05DC:  MOVLW  9A
05DD:  MOVWF  34
05DE:  MOVLW  CA
05DF:  MOVWF  33
05E0:  CLRF   32
05E1:  MOVLW  0A
05E2:  MOVWF  30
05E3:  MOVF   2D,W
05E4:  BTFSC  03.2
05E5:  INCF   2E,F
05E6:  BSF    03.1
05E7:  MOVLW  29
05E8:  MOVWF  04
05E9:  BCF    03.7
05EA:  MOVF   2C,W
05EB:  MOVWF  39
05EC:  MOVF   2B,W
05ED:  MOVWF  38
05EE:  MOVF   2A,W
05EF:  MOVWF  37
05F0:  MOVF   29,W
05F1:  MOVWF  36
05F2:  MOVF   35,W
05F3:  MOVWF  3D
05F4:  MOVF   34,W
05F5:  MOVWF  3C
05F6:  MOVF   33,W
05F7:  MOVWF  3B
05F8:  MOVF   32,W
05F9:  MOVWF  3A
05FA:  CALL   35C
05FB:  MOVF   78,W
05FC:  MOVF   77,F
05FD:  BTFSS  03.2
05FE:  GOTO   612
05FF:  INCF   2D,W
0600:  SUBWF  30,W
0601:  BTFSC  03.2
0602:  GOTO   612
0603:  MOVF   2E,W
0604:  BTFSC  03.2
0605:  GOTO   614
0606:  ANDLW  0F
0607:  SUBWF  30,W
0608:  BTFSC  03.2
0609:  GOTO   60C
060A:  BTFSC  03.0
060B:  GOTO   644
060C:  BTFSC  2E.7
060D:  GOTO   644
060E:  BTFSC  2E.6
060F:  GOTO   614
0610:  MOVLW  20
0611:  GOTO   640
0612:  MOVLW  20
0613:  ANDWF  2E,F
0614:  BTFSS  2E.5
0615:  GOTO   622
0616:  BCF    2E.5
0617:  MOVF   2D,W
0618:  BTFSS  03.2
0619:  DECF   2E,F
061A:  MOVF   77,W
061B:  MOVWF  2E
061C:  MOVLW  2D
061D:  MOVWF  36
061E:  CALL   0DA
061F:  MOVF   2E,W
0620:  MOVWF  77
0621:  CLRF   2E
0622:  MOVF   2D,W
0623:  SUBWF  30,W
0624:  BTFSS  03.2
0625:  GOTO   630
0626:  MOVF   77,W
0627:  MOVWF  2E
0628:  MOVLW  2E
0629:  MOVWF  36
062A:  CALL   0DA
062B:  MOVF   2E,W
062C:  MOVWF  77
062D:  MOVLW  20
062E:  ANDWF  2E,F
062F:  MOVLW  00
0630:  MOVLW  30
0631:  BTFSS  2E.5
0632:  GOTO   640
0633:  BCF    2E.5
0634:  MOVF   2D,W
0635:  BTFSS  03.2
0636:  DECF   2E,F
0637:  MOVF   77,W
0638:  MOVWF  2E
0639:  MOVLW  2D
063A:  MOVWF  36
063B:  CALL   0DA
063C:  MOVF   2E,W
063D:  MOVWF  77
063E:  CLRF   2E
063F:  MOVLW  30
0640:  ADDWF  77,F
0641:  MOVF   77,W
0642:  MOVWF  36
0643:  CALL   0DA
0644:  BCF    03.1
0645:  MOVF   35,W
0646:  MOVWF  39
0647:  MOVF   34,W
0648:  MOVWF  38
0649:  MOVF   33,W
064A:  MOVWF  37
064B:  MOVF   32,W
064C:  MOVWF  36
064D:  CLRF   3D
064E:  CLRF   3C
064F:  CLRF   3B
0650:  MOVLW  0A
0651:  MOVWF  3A
0652:  CALL   35C
0653:  MOVF   7A,W
0654:  MOVWF  35
0655:  MOVF   79,W
0656:  MOVWF  34
0657:  MOVF   78,W
0658:  MOVWF  33
0659:  MOVF   77,W
065A:  MOVWF  32
065B:  DECFSZ 30,F
065C:  GOTO   5E6
065D:  BCF    0A.3
065E:  BCF    0A.4
065F:  GOTO   7A6 (RETURN)
....................  
.................... #list 
....................  
.................... #use delay(clock=4000000) 
*
0041:  MOVLW  37
0042:  MOVWF  04
0043:  BCF    03.7
0044:  MOVF   00,W
0045:  BTFSC  03.2
0046:  GOTO   055
0047:  MOVLW  01
0048:  MOVWF  78
0049:  CLRF   77
004A:  DECFSZ 77,F
004B:  GOTO   04A
004C:  DECFSZ 78,F
004D:  GOTO   049
004E:  MOVLW  4A
004F:  MOVWF  77
0050:  DECFSZ 77,F
0051:  GOTO   050
0052:  GOTO   053
0053:  DECFSZ 00,F
0054:  GOTO   047
0055:  RETURN
.................... #include <lcd1.c> 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////                             LCDD.C                                //// 
.................... ////                 Driver for common LCD modules                     //// 
.................... ////                                                                   //// 
.................... ////  lcd_init()   Must be called before any other function.           //// 
.................... ////                                                                   //// 
.................... ////  lcd_putc(c)  Will display c on the next position of the LCD.     //// 
.................... ////                     The following have special meaning:           //// 
.................... ////                      \f  Clear display                            //// 
.................... ////                      \n  Go to start of second line               //// 
.................... ////                      \b  Move back one position                   //// 
.................... ////                                                                   //// 
.................... ////  lcd_gotoxy(x,y) Set write position on LCD (upper left is 1,1)    //// 
.................... ////                                                                   //// 
.................... ////  lcd_getc(x,y)   Returns character at position x,y on LCD         //// 
.................... ////                                                                   //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996,2007 Custom Computer Services           //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
....................  
.................... // As defined in the following structure the pin connection is as follows: 
.................... //     D0  enable 
.................... //     D1  rs 
.................... //     D2  rw 
.................... //     D4  D4 
.................... //     D5  D5 
.................... //     D6  D6 
.................... //     D7  D7 
.................... // 
.................... //   LCD pins D0-D3 are not used and PIC D3 is not used. 
....................  
.................... // Un-comment the following define to use port B 
.................... #define use_portb_lcd TRUE 
....................  
....................  
.................... struct lcd_pin_map {                 // This structure is overlayed 
....................            BOOLEAN enable;           // on to an I/O port to gain 
....................            BOOLEAN rs;               // access to the LCD pins. 
....................            BOOLEAN rw;               // The bits are allocated from 
....................            BOOLEAN unused;           // low order up.  ENABLE will 
....................            int     data : 4;         // be pin B0. 
....................         } lcd; 
....................  
....................  
.................... #if defined use_portb_lcd 
....................    //#locate lcd = getenv("sfr:PORTB")    // This puts the entire structure over the port 
....................    #ifdef __pch__ 
....................     #locate lcd = 0xf81 
....................    #else 
....................     #locate lcd = 6 
....................    #endif 
....................    #define set_tris_lcd(x) set_tris_b(x) 
.................... #else 
....................    //#locate lcd = getenv("sfr:PORTD")    // This puts the entire structure over the port 
....................    #ifdef __pch__ 
....................     #locate lcd = 0xf83 
....................    #else 
....................     #locate lcd = 8 
....................    #endif 
....................    #define set_tris_lcd(x) set_tris_d(x) 
.................... #endif 
....................  
.................... #ifndef lcd_type 
.................... #define lcd_type 2           // 0=5x7, 1=5x10, 2=2 lines 
.................... #endif 
....................  
.................... #define lcd_line_two 0x40    // LCD RAM address for the second line 
....................  
....................  
.................... BYTE const LCD_INIT_STRING[4] = {0x20 | (lcd_type << 2), 0xc, 1, 6}; 
....................                              // These bytes need to be sent to the LCD 
....................                              // to start it up. 
....................  
....................  
....................                              // The following are used for setting 
....................                              // the I/O port direction register. 
....................  
.................... struct lcd_pin_map const LCD_WRITE = {0,0,0,0,0}; // For write mode all pins are out 
.................... struct lcd_pin_map const LCD_READ = {0,0,0,0,15}; // For read mode data pins are in 
....................  
....................  
....................  
.................... BYTE lcd_read_byte() { 
....................       BYTE low,high; 
....................       set_tris_lcd(LCD_READ); 
*
0063:  MOVLW  F0
0064:  BSF    03.5
0065:  MOVWF  06
....................       lcd.rw = 1; 
0066:  BCF    03.5
0067:  BSF    06.2
....................       delay_cycles(1); 
0068:  NOP
....................       lcd.enable = 1; 
0069:  BSF    06.0
....................       delay_cycles(1); 
006A:  NOP
....................       high = lcd.data; 
006B:  MOVF   06,W
006C:  SWAPF  06,W
006D:  ANDLW  0F
006E:  MOVWF  3E
....................       lcd.enable = 0; 
006F:  BCF    06.0
....................       delay_cycles(1); 
0070:  NOP
....................       lcd.enable = 1; 
0071:  BSF    06.0
....................       delay_us(1); 
0072:  NOP
....................       low = lcd.data; 
0073:  MOVF   06,W
0074:  SWAPF  06,W
0075:  ANDLW  0F
0076:  MOVWF  3D
....................       lcd.enable = 0; 
0077:  BCF    06.0
....................       set_tris_lcd(LCD_WRITE); 
0078:  MOVLW  00
0079:  BSF    03.5
007A:  MOVWF  06
....................       return( (high<<4) | low); 
007B:  BCF    03.5
007C:  SWAPF  3E,W
007D:  MOVWF  77
007E:  MOVLW  F0
007F:  ANDWF  77,F
0080:  MOVF   77,W
0081:  IORWF  3D,W
0082:  MOVWF  78
.................... } 
....................  
....................  
.................... void lcd_send_nibble( BYTE n ) { 
....................       lcd.data = n; 
*
0056:  SWAPF  3E,W
0057:  ANDLW  F0
0058:  MOVWF  77
0059:  MOVLW  0F
005A:  ANDWF  06,W
005B:  IORWF  77,W
005C:  MOVWF  06
....................       delay_cycles(1); 
005D:  NOP
....................       lcd.enable = 1; 
005E:  BSF    06.0
....................       delay_us(2); 
005F:  GOTO   060
....................       lcd.enable = 0; 
0060:  BCF    06.0
0061:  RETURN
.................... } 
....................  
....................  
.................... void lcd_send_byte( BYTE address, BYTE n ) { 
....................  
....................       lcd.rs = 0; 
0062:  BCF    06.1
....................       while ( bit_test(lcd_read_byte(),7) ) ; 
*
0083:  MOVF   78,W
0084:  MOVWF  3D
0085:  BTFSC  3D.7
0086:  GOTO   063
....................       lcd.rs = address; 
0087:  BTFSS  3B.0
0088:  BCF    06.1
0089:  BTFSC  3B.0
008A:  BSF    06.1
....................       delay_cycles(1); 
008B:  NOP
....................       lcd.rw = 0; 
008C:  BCF    06.2
....................       delay_cycles(1); 
008D:  NOP
....................       lcd.enable = 0; 
008E:  BCF    06.0
....................       lcd_send_nibble(n >> 4); 
008F:  SWAPF  3C,W
0090:  MOVWF  3D
0091:  MOVLW  0F
0092:  ANDWF  3D,F
0093:  MOVF   3D,W
0094:  MOVWF  3E
0095:  CALL   056
....................       lcd_send_nibble(n & 0xf); 
0096:  MOVF   3C,W
0097:  ANDLW  0F
0098:  MOVWF  3D
0099:  MOVWF  3E
009A:  CALL   056
009B:  RETURN
.................... } 
....................  
....................  
.................... void lcd_init() { 
....................     BYTE i; 
....................     set_tris_lcd(LCD_WRITE); 
009C:  MOVLW  00
009D:  BSF    03.5
009E:  MOVWF  06
....................     lcd.rs = 0; 
009F:  BCF    03.5
00A0:  BCF    06.1
....................     lcd.rw = 0; 
00A1:  BCF    06.2
....................     lcd.enable = 0; 
00A2:  BCF    06.0
....................     delay_ms(15); 
00A3:  MOVLW  0F
00A4:  MOVWF  37
00A5:  CALL   041
....................     for(i=1;i<=3;++i) { 
00A6:  MOVLW  01
00A7:  MOVWF  29
00A8:  MOVF   29,W
00A9:  SUBLW  03
00AA:  BTFSS  03.0
00AB:  GOTO   0B4
....................        lcd_send_nibble(3); 
00AC:  MOVLW  03
00AD:  MOVWF  3E
00AE:  CALL   056
....................        delay_ms(5); 
00AF:  MOVLW  05
00B0:  MOVWF  37
00B1:  CALL   041
00B2:  INCF   29,F
00B3:  GOTO   0A8
....................     } 
....................     lcd_send_nibble(2); 
00B4:  MOVLW  02
00B5:  MOVWF  3E
00B6:  CALL   056
....................     for(i=0;i<=3;++i) 
00B7:  CLRF   29
00B8:  MOVF   29,W
00B9:  SUBLW  03
00BA:  BTFSS  03.0
00BB:  GOTO   0C5
....................        lcd_send_byte(0,LCD_INIT_STRING[i]); 
00BC:  MOVF   29,W
00BD:  CALL   004
00BE:  MOVWF  2A
00BF:  CLRF   3B
00C0:  MOVF   2A,W
00C1:  MOVWF  3C
00C2:  CALL   062
00C3:  INCF   29,F
00C4:  GOTO   0B8
00C5:  BCF    0A.3
00C6:  BCF    0A.4
00C7:  GOTO   679 (RETURN)
.................... } 
....................  
....................  
.................... void lcd_gotoxy( BYTE x, BYTE y) { 
....................    BYTE address; 
....................  
....................    if(y!=1) 
00C8:  DECFSZ 38,W
00C9:  GOTO   0CB
00CA:  GOTO   0CE
....................      address=lcd_line_two; 
00CB:  MOVLW  40
00CC:  MOVWF  39
00CD:  GOTO   0CF
....................    else 
....................      address=0; 
00CE:  CLRF   39
....................    address+=x-1; 
00CF:  MOVLW  01
00D0:  SUBWF  37,W
00D1:  ADDWF  39,F
....................    lcd_send_byte(0,0x80|address); 
00D2:  MOVF   39,W
00D3:  IORLW  80
00D4:  MOVWF  3A
00D5:  CLRF   3B
00D6:  MOVF   3A,W
00D7:  MOVWF  3C
00D8:  CALL   062
00D9:  RETURN
.................... } 
....................  
.................... void lcd_putc( char c) { 
....................    switch (c) { 
00DA:  MOVF   36,W
00DB:  XORLW  0C
00DC:  BTFSC  03.2
00DD:  GOTO   0E5
00DE:  XORLW  06
00DF:  BTFSC  03.2
00E0:  GOTO   0ED
00E1:  XORLW  02
00E2:  BTFSC  03.2
00E3:  GOTO   0F3
00E4:  GOTO   0F8
....................      case '\f'   : lcd_send_byte(0,1); 
00E5:  CLRF   3B
00E6:  MOVLW  01
00E7:  MOVWF  3C
00E8:  CALL   062
....................                    delay_ms(2); 
00E9:  MOVLW  02
00EA:  MOVWF  37
00EB:  CALL   041
....................                                            break; 
00EC:  GOTO   0FD
....................      case '\n'   : lcd_gotoxy(1,2);        break; 
00ED:  MOVLW  01
00EE:  MOVWF  37
00EF:  MOVLW  02
00F0:  MOVWF  38
00F1:  CALL   0C8
00F2:  GOTO   0FD
....................      case '\b'   : lcd_send_byte(0,0x10);  break; 
00F3:  CLRF   3B
00F4:  MOVLW  10
00F5:  MOVWF  3C
00F6:  CALL   062
00F7:  GOTO   0FD
....................      default     : lcd_send_byte(1,c);     break; 
00F8:  MOVLW  01
00F9:  MOVWF  3B
00FA:  MOVF   36,W
00FB:  MOVWF  3C
00FC:  CALL   062
....................    } 
00FD:  RETURN
.................... } 
....................  
.................... char lcd_getc( BYTE x, BYTE y) { 
....................    char value; 
....................  
....................     lcd_gotoxy(x,y); 
....................     while ( bit_test(lcd_read_byte(),7) ); // wait until busy flag is low 
....................     lcd.rs=1; 
....................     value = lcd_read_byte(); 
....................     lcd.rs=0; 
....................     return(value); 
.................... } 
....................  
.................... #fuses intrc_io,nowdt,noput,nomclr,noprotect,nocpd,nobrownout 
.................... #fuses noieso,nofcmen,nodebug,nowrt,borv21 
.................... #use fast_io(A) 
.................... #use fast_io(B) 
....................  
.................... void main() 
*
0660:  MOVF   03,W
0661:  ANDLW  1F
0662:  MOVWF  03
0663:  BSF    03.5
0664:  BSF    03.6
0665:  MOVF   09,W
0666:  ANDLW  C0
0667:  MOVWF  09
0668:  BCF    03.6
0669:  BCF    1F.4
066A:  BCF    1F.5
066B:  MOVLW  00
066C:  BSF    03.6
066D:  MOVWF  08
066E:  BCF    03.5
066F:  CLRF   07
0670:  CLRF   08
0671:  CLRF   09
0672:  BCF    03.7
.................... {      
....................    set_tris_A(0xFF); 
0673:  MOVLW  FF
0674:  BSF    03.5
0675:  BCF    03.6
0676:  MOVWF  05
....................    lcd_init();  
0677:  BCF    03.5
0678:  GOTO   09C
....................    while(1) 
....................    { 
....................       int A=Input_A();                                                             //0011 1000= 38 
0679:  MOVF   05,W
067A:  MOVWF  21
....................       A=A&0x38; 
067B:  MOVLW  38
067C:  ANDWF  21,F
....................       A>>=3; 
067D:  RRF    21,F
067E:  RRF    21,F
067F:  RRF    21,F
0680:  MOVLW  1F
0681:  ANDWF  21,F
....................        
....................       int B=Input_A();                                                             //0000 0111 =07 
0682:  MOVF   05,W
0683:  MOVWF  22
....................       B=B&0x07; 
0684:  MOVLW  07
0685:  ANDWF  22,F
....................     
....................       int Operacion=Input_A();                                                     //1100 0000= C0 
0686:  MOVF   05,W
0687:  MOVWF  23
....................       Operacion=Operacion&0xC0; 
0688:  MOVLW  C0
0689:  ANDWF  23,F
....................       Operacion>>=6; 
068A:  SWAPF  23,F
068B:  RRF    23,F
068C:  RRF    23,F
068D:  MOVLW  03
068E:  ANDWF  23,F
....................   
....................       signed int Resultadosrm; 
....................       Lcd_gotoxy(1,1); 
068F:  MOVLW  01
0690:  MOVWF  37
0691:  MOVWF  38
0692:  CALL   0C8
....................       if (Operacion== 0x00)                                                      //Suma 
0693:  MOVF   23,F
0694:  BTFSS  03.2
0695:  GOTO   6CB
....................          { 
....................          Resultadosrm=A+B; 
0696:  MOVF   22,W
0697:  ADDWF  21,W
0698:  MOVWF  24
....................          printf(lcd_putc,"\f \n \f"); 
0699:  MOVLW  0C
069A:  BSF    03.6
069B:  MOVWF  0D
069C:  MOVLW  00
069D:  MOVWF  0F
069E:  BCF    03.6
069F:  CALL   0FE
....................          printf (lcd_putc, "A + B\n %u + %u = %u",A,B,Resultadosrm); 
06A0:  MOVLW  0F
06A1:  BSF    03.6
06A2:  MOVWF  0D
06A3:  MOVLW  00
06A4:  MOVWF  0F
06A5:  BCF    03.0
06A6:  MOVLW  07
06A7:  BCF    03.6
06A8:  MOVWF  29
06A9:  CALL   154
06AA:  MOVF   21,W
06AB:  MOVWF  29
06AC:  MOVLW  1B
06AD:  MOVWF  2A
06AE:  CALL   1C0
06AF:  MOVLW  20
06B0:  MOVWF  36
06B1:  CALL   0DA
06B2:  MOVLW  2B
06B3:  MOVWF  36
06B4:  CALL   0DA
06B5:  MOVLW  20
06B6:  MOVWF  36
06B7:  CALL   0DA
06B8:  MOVF   22,W
06B9:  MOVWF  29
06BA:  MOVLW  1B
06BB:  MOVWF  2A
06BC:  CALL   1C0
06BD:  MOVLW  20
06BE:  MOVWF  36
06BF:  CALL   0DA
06C0:  MOVLW  3D
06C1:  MOVWF  36
06C2:  CALL   0DA
06C3:  MOVLW  20
06C4:  MOVWF  36
06C5:  CALL   0DA
06C6:  MOVF   24,W
06C7:  MOVWF  29
06C8:  MOVLW  1B
06C9:  MOVWF  2A
06CA:  CALL   1C0
....................          } 
....................       if (Operacion== 0x01)                                                      //Resta 
06CB:  DECFSZ 23,W
06CC:  GOTO   702
....................          { 
....................          Resultadosrm=A-B; 
06CD:  MOVF   22,W
06CE:  SUBWF  21,W
06CF:  MOVWF  24
....................          printf(lcd_putc,"\f \n \f"); 
06D0:  MOVLW  19
06D1:  BSF    03.6
06D2:  MOVWF  0D
06D3:  MOVLW  00
06D4:  MOVWF  0F
06D5:  BCF    03.6
06D6:  CALL   0FE
....................          printf (lcd_putc, "A - B\n %u - %u = %d",A,B,Resultadosrm); 
06D7:  MOVLW  1C
06D8:  BSF    03.6
06D9:  MOVWF  0D
06DA:  MOVLW  00
06DB:  MOVWF  0F
06DC:  BCF    03.0
06DD:  MOVLW  07
06DE:  BCF    03.6
06DF:  MOVWF  29
06E0:  CALL   154
06E1:  MOVF   21,W
06E2:  MOVWF  29
06E3:  MOVLW  1B
06E4:  MOVWF  2A
06E5:  CALL   1C0
06E6:  MOVLW  20
06E7:  MOVWF  36
06E8:  CALL   0DA
06E9:  MOVLW  2D
06EA:  MOVWF  36
06EB:  CALL   0DA
06EC:  MOVLW  20
06ED:  MOVWF  36
06EE:  CALL   0DA
06EF:  MOVF   22,W
06F0:  MOVWF  29
06F1:  MOVLW  1B
06F2:  MOVWF  2A
06F3:  CALL   1C0
06F4:  MOVLW  20
06F5:  MOVWF  36
06F6:  CALL   0DA
06F7:  MOVLW  3D
06F8:  MOVWF  36
06F9:  CALL   0DA
06FA:  MOVLW  20
06FB:  MOVWF  36
06FC:  CALL   0DA
06FD:  MOVF   24,W
06FE:  MOVWF  29
06FF:  MOVLW  18
0700:  MOVWF  2A
0701:  CALL   1F5
....................          } 
....................       if (Operacion== 0x02)                                                      //Multiplicación 
0702:  MOVF   23,W
0703:  SUBLW  02
0704:  BTFSS  03.2
0705:  GOTO   73F
....................          { 
....................          Resultadosrm=A*B; 
0706:  MOVF   21,W
0707:  MOVWF  29
0708:  MOVF   22,W
0709:  MOVWF  2A
070A:  GOTO   24C
070B:  MOVF   78,W
070C:  MOVWF  24
....................          printf(lcd_putc,"\f \n \f"); 
070D:  MOVLW  26
070E:  BSF    03.6
070F:  MOVWF  0D
0710:  MOVLW  00
0711:  MOVWF  0F
0712:  BCF    03.6
0713:  CALL   0FE
....................          printf (lcd_putc, "A * B\n %u * %u = %d",A,B,Resultadosrm); 
0714:  MOVLW  29
0715:  BSF    03.6
0716:  MOVWF  0D
0717:  MOVLW  00
0718:  MOVWF  0F
0719:  BCF    03.0
071A:  MOVLW  07
071B:  BCF    03.6
071C:  MOVWF  29
071D:  CALL   154
071E:  MOVF   21,W
071F:  MOVWF  29
0720:  MOVLW  1B
0721:  MOVWF  2A
0722:  CALL   1C0
0723:  MOVLW  20
0724:  MOVWF  36
0725:  CALL   0DA
0726:  MOVLW  2A
0727:  MOVWF  36
0728:  CALL   0DA
0729:  MOVLW  20
072A:  MOVWF  36
072B:  CALL   0DA
072C:  MOVF   22,W
072D:  MOVWF  29
072E:  MOVLW  1B
072F:  MOVWF  2A
0730:  CALL   1C0
0731:  MOVLW  20
0732:  MOVWF  36
0733:  CALL   0DA
0734:  MOVLW  3D
0735:  MOVWF  36
0736:  CALL   0DA
0737:  MOVLW  20
0738:  MOVWF  36
0739:  CALL   0DA
073A:  MOVF   24,W
073B:  MOVWF  29
073C:  MOVLW  18
073D:  MOVWF  2A
073E:  CALL   1F5
....................          } 
....................       if (Operacion== 0x03)                                                      //División 
073F:  MOVF   23,W
0740:  SUBLW  03
0741:  BTFSS  03.2
0742:  GOTO   7A6
....................          { 
....................          float Resultadod=(float)A/B; 
0743:  CLRF   2E
0744:  MOVF   21,W
0745:  MOVWF  2D
0746:  CALL   273
0747:  MOVF   7A,W
0748:  MOVWF  2C
0749:  MOVF   79,W
074A:  MOVWF  2B
074B:  MOVF   78,W
074C:  MOVWF  2A
074D:  MOVF   77,W
074E:  MOVWF  29
074F:  CLRF   2E
0750:  MOVF   22,W
0751:  MOVWF  2D
0752:  CALL   273
0753:  MOVF   2C,W
0754:  MOVWF  30
0755:  MOVF   2B,W
0756:  MOVWF  2F
0757:  MOVF   2A,W
0758:  MOVWF  2E
0759:  MOVF   29,W
075A:  MOVWF  2D
075B:  MOVF   7A,W
075C:  MOVWF  34
075D:  MOVF   79,W
075E:  MOVWF  33
075F:  MOVF   78,W
0760:  MOVWF  32
0761:  MOVF   77,W
0762:  MOVWF  31
0763:  GOTO   290
0764:  MOVF   7A,W
0765:  MOVWF  28
0766:  MOVF   79,W
0767:  MOVWF  27
0768:  MOVF   78,W
0769:  MOVWF  26
076A:  MOVF   77,W
076B:  MOVWF  25
....................          printf (lcd_putc,"\f \n \f"); 
076C:  MOVLW  33
076D:  BSF    03.6
076E:  MOVWF  0D
076F:  MOVLW  00
0770:  MOVWF  0F
0771:  BCF    03.6
0772:  CALL   0FE
....................          printf (lcd_putc, "A / B\n %u / %u = %.3g",A,B,Resultadod); 
0773:  MOVLW  36
0774:  BSF    03.6
0775:  MOVWF  0D
0776:  MOVLW  00
0777:  MOVWF  0F
0778:  BCF    03.0
0779:  MOVLW  07
077A:  BCF    03.6
077B:  MOVWF  29
077C:  CALL   154
077D:  MOVF   21,W
077E:  MOVWF  29
077F:  MOVLW  1B
0780:  MOVWF  2A
0781:  CALL   1C0
0782:  MOVLW  20
0783:  MOVWF  36
0784:  CALL   0DA
0785:  MOVLW  2F
0786:  MOVWF  36
0787:  CALL   0DA
0788:  MOVLW  20
0789:  MOVWF  36
078A:  CALL   0DA
078B:  MOVF   22,W
078C:  MOVWF  29
078D:  MOVLW  1B
078E:  MOVWF  2A
078F:  CALL   1C0
0790:  MOVLW  20
0791:  MOVWF  36
0792:  CALL   0DA
0793:  MOVLW  3D
0794:  MOVWF  36
0795:  CALL   0DA
0796:  MOVLW  20
0797:  MOVWF  36
0798:  CALL   0DA
0799:  MOVLW  89
079A:  MOVWF  04
079B:  MOVF   28,W
079C:  MOVWF  2C
079D:  MOVF   27,W
079E:  MOVWF  2B
079F:  MOVF   26,W
07A0:  MOVWF  2A
07A1:  MOVF   25,W
07A2:  MOVWF  29
07A3:  MOVLW  03
07A4:  MOVWF  2D
07A5:  GOTO   3AB
....................          } 
....................       delay_ms(300); 
07A6:  MOVLW  02
07A7:  MOVWF  29
07A8:  MOVLW  96
07A9:  MOVWF  37
07AA:  CALL   041
07AB:  DECFSZ 29,F
07AC:  GOTO   7A8
07AD:  GOTO   679
....................    } 
.................... } 
07AE:  SLEEP

Configuration Fuses:
   Word  1: 20D4   INTRC_IO NOWDT NOPUT NOMCLR NOPROTECT NOCPD NOBROWNOUT NOIESO NOFCMEN NOLVP NODEBUG
   Word  2: 3EFF   BORV21 NOWRT
